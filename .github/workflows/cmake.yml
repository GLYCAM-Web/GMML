name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.), eventually wanna make cmake stuff more normal but w/e ignore this 4 now
  #BUILD_TYPE: Release
  shell: bash

jobs:
  boogerTest:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    
    #may need to specify cmake version idk
    steps:
    - uses: actions/checkout@v3

    #install and cache boost cause for some reason github doesnt include it in their images lmao
    #peep this https://raymii.org/s/articles/Github_Actions_cpp_boost_cmake_speedup.html
    - name: Cache boost
      uses: actions/cache@v3
      id: cache-boost
      with:
         path: "~/boost"
         key: libboost-all-dev
    - name: Install boost
      env:
        CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp -v --force --recursive ~/boost/* /
        else
            sudo apt-get update && sudo apt-get install -yq libboost-all-dev
            mkdir -p ~/boost
            for dep in libboost-all-dev; do
                dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
            done
        fi
    
    #Done for installing eigen 3 lib also smdh
    - name: Cache eigen3
      uses: actions/cache@v3
      id: cache-eigen
      with:
         path: "~/eigen"
         key: libeigen3-dev
    - name: Install eigen
      env:
        CACHE_HIT: ${{steps.cache-eigen.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp -v --force --recursive ~/eigen/* /
        else
            sudo apt-get update && sudo apt-get install -yq libeigen3-dev
            mkdir -p ~/eigen
            for dep in libeigen3-dev; do
                dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/eigen/
            done
        fi
         
    #make sure we are setting up our python right
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

#turns out u cant set normal env vars. Kind of annoying but w/e
#https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
    - name: Set up GEMSHOME gross
      run: echo "GEMSHOME=$(dirname $(pwd))" >> $GITHUB_ENV

    - name: BuildScript
      #We wanna make sure we can wrap just in case, lazy but w/e this is just getting us something.
      #takes around 7 mins for nowrap
      run: ./make.sh -j 2 -c 

    - name: Run tests that are possible to run on bare metal
      run: |
        echo $(pwd)
        bash ./compile_run_tests.sh -j 2 -d bare_metal
      working-directory: tests
      
    
    #ignored for now, but we eventually wanna run our tests n whatnot but right now the tests wont work outside container. 
    #- name: Test
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
