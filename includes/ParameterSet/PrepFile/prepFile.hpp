#ifndef INCLUDES_PARAMETERSET_PREPFILE_PREPFILE_HPP_
#define INCLUDES_PARAMETERSET_PREPFILE_PREPFILE_HPP_

#include <map>
#include <string>
#include <iostream>
#include <vector>

#include "includes/CentralDataStructure/cdsMolecule.hpp"
#include "includes/ParameterSet/PrepFile/prepResidue.hpp"
#include "includes/ParameterSet/PrepFile/prepAtom.hpp"

namespace prep
{
class PrepFile : public cds::cdsMolecule<PrepResidue, PrepAtom>
{
public:
	//////////////////////////////////////////////////////////
	//                     TYPE DEFINITION                  //
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	//                       Constructor                    //
	//////////////////////////////////////////////////////////
	PrepFile(const std::string& prep_file);
	PrepFile(const std::string& prep_file, const std::vector<std::string> queryNames);
	//////////////////////////////////////////////////////////
	//                           ACCESSOR                   //
	//////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////
	//                           MUTATOR                    //
	//////////////////////////////////////////////////////////
	void SetAtomConnectivities();
	void Generate3dStructures();
	//////////////////////////////////////////////////////////
	//                         FUNCTIONS                    //
	//////////////////////////////////////////////////////////
	void Write(const std::string& prep_file);
	void Write(std::ofstream& out_stream);
	//////////////////////////////////////////////////////////
	//                     DISPLAY FUNCTIONS                //
	//////////////////////////////////////////////////////////
	std::string Print() const;
private:
	//////////////////////////////////////////////////////////
	//                           ACCESSOR                   //
	//////////////////////////////////////////////////////////
    //////////////////////////////////////////////////////////
	//                           MUTATOR                    //
	//////////////////////////////////////////////////////////
    void ReadAllResidues(std::ifstream& in_file);
    void ReadQueryResidues(std::ifstream &in_file, const std::vector<std::string>& queryNames);
    //void ReadOnlyQueryResidues(std::ifstream &in_file, std::vector<std::string>& query_residue_names);
	//////////////////////////////////////////////////////////
	//                         ATTRIBUTES                   //
	//////////////////////////////////////////////////////////
};
}
#endif /* INCLUDES_PARAMETERSET_PREPFILE_PREPFILE_HPP_ */
