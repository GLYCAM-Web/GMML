/** @defgroup Data_Sets
   *  @brief This group contains code that read and store data relevant to the molecular data structures
   *
   *Their purpose is either to provide additional information for the molecular data structures (e.g., atomic masses for the atoms)
   *or to provide templates to be used in curating them (e.g., the proper bonding patterns corresponding to a certain molecule).
   */

/** @defgroup Input_Command_Parser
   *  @brief This group contains input that executes certain commands
   *
   *That is, various parts of the library might be put together to perform a certain task.
   *These parsers deal with that. I expect they are most often called from a gems script.
   */

/** @defgroup Input_File_Reader
   *  @brief This group contains parsers that read files of various types
   *
   *  
   */ 

/** @defgroup Input_Sequence_Parser
     *  @brief This group contains parsers that make sense of chemical names
     *
     *For example, DFrufb2-1DGlcpa 
     *is sucrose, and the parser would turn DFrufb2-1DGlcpa into whatever it needs
     *to be for the internal code. But, it might, in some cases, leave it as-is, 
     *depending on what needs to be done, because that notation is one of the internal standards. 
     *One day, it might also take in “sucrose” and translate that to DFrufb2-1DGlcpa and then to 
     *whatever else is needed, if something else is needed.
     *
     *  
     */   

/** @defgroup Manipulators
   *  @ingroup Molecular_Data_Structure
   *  @brief This group contains code that make changes to the molecular data structure (MDS)
   *
   *They might change atomic coordinates, names, etc. They might also make selections from the MDS
   *or join two sets of data described by the MDS. Of note is the assembly – this is a collection of
   *residues or of other assemblies. Most functions will operate on assemblies.
   */

/** @defgroup Molecular_Data_Structure
     *  @brief This group contains information that pertains to well-organized storage for molecular data
     *
     *It contains information such as atom names, bonding and geometric information. 
     *It can also classify an atom or set of atoms/residues as having a certain ‘type’, 
     *thus assigning the atom additional information. For example, a “molecular dynamics atom” 
     *might contain information about its atom type or partial charge. But, other information 
     *might be needed for a “quantum mechanics atom”. And, the partial charge for a “molecular dynamics atom” 
     *might differ from the charge for a “docking atom”. An atom can be multiple types at once.  
     *  
     */   

/** @defgroup Output_File_Builder
   *  @brief This group contains code that export information stored in the MDS to files of varying types
   *
   *
   */

/** @defgroup Output_Sequence_Builder
   *  @brief This group contains code that determine an appropriate sequence that describes all or part of the molecular data structure (MDS)
   *
   *
   */

/** @defgroup Verifiers_and_Issue_Resolvers
   *  @brief This group contains functions that check to see if all the required information is present or if the current status of a molecular data structure conforms to an expected set of rules
   *
   * For example, code in this category might check to see if the information contained in
   *the loaded Data Sets is sufficient to treat all atoms contained in an input file. 
   *It might also check the geometries of the atoms in the molecular data structure to ensure that there are no
   *serious overlaps between atoms (that is, ensure that no two atoms are occupying the same space).
   */    
